// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Storyshots TextField Labelling 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "backgroundColor": "#f0f0f0",
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RCTScrollView
      data={
        Array [
          Array [
            <UseCase
              text="Normal text"
              usage="Use placeholder and label to set the text."
            >
              <State
                initial={
                  Object {
                    "value": "",
                  }
                }
              >
                [Function]
              </State>
            </UseCase>,
            <UseCase
              text="i18n text"
              usage="Use placeholderTx and labelTx for i18n lookups"
            >
              <State
                initial={
                  Object {
                    "value": "",
                  }
                }
              >
                [Function]
              </State>
            </UseCase>,
          ],
        ]
      }
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={true}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Object {
                "backgroundColor": "#eee",
              }
            }
          >
            <View
              style={
                Object {
                  "borderBottomColor": "#e6e6e6",
                  "borderBottomWidth": 1,
                  "paddingBottom": 10,
                  "paddingHorizontal": 10,
                  "paddingTop": 20,
                }
              }
            >
              <View
                style={
                  Object {
                    "borderTopColor": "#e6e6e6",
                    "borderTopWidth": 1,
                    "flexDirection": "row",
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#666",
                      "fontSize": 10,
                      "paddingBottom": 2,
                      "paddingHorizontal": 4,
                    }
                  }
                >
                  Use Case
                </Text>
              </View>
              <View
                style={Object {}}
              >
                <Text
                  style={
                    Object {
                      "color": "#3d3d3d",
                      "fontWeight": "600",
                    }
                  }
                >
                  Normal text
                </Text>
              </View>
              <Text
                style={
                  Object {
                    "color": "#666",
                    "fontSize": 10,
                    "paddingTop": 0,
                  }
                }
              >
                Use placeholder and label to set the text.
              </Text>
            </View>
            <View
              style={
                Object {
                  "backgroundColor": "#fff",
                  "padding": 10,
                }
              }
            >
              <View
                style={
                  Object {
                    "paddingVertical": 12,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#414042",
                      "fontFamily": "OpenSans-Regular",
                      "fontSize": 13,
                    }
                  }
                >
                  Name
                </Text>
                <TextInput
                  allowFontScaling={true}
                  onChangeText={[Function]}
                  placeholder="omg your name"
                  rejectResponderTermination={true}
                  style={
                    Object {
                      "backgroundColor": "#ffffff",
                      "color": "#000000",
                      "fontFamily": "OpenSans-Regular",
                      "fontSize": 18,
                      "minHeight": 44,
                    }
                  }
                  underlineColorAndroid="rgba(0, 0, 0, 0)"
                  value=""
                />
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "backgroundColor": "#eee",
              }
            }
          >
            <View
              style={
                Object {
                  "borderBottomColor": "#e6e6e6",
                  "borderBottomWidth": 1,
                  "paddingBottom": 10,
                  "paddingHorizontal": 10,
                  "paddingTop": 20,
                }
              }
            >
              <View
                style={
                  Object {
                    "borderTopColor": "#e6e6e6",
                    "borderTopWidth": 1,
                    "flexDirection": "row",
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#666",
                      "fontSize": 10,
                      "paddingBottom": 2,
                      "paddingHorizontal": 4,
                    }
                  }
                >
                  Use Case
                </Text>
              </View>
              <View
                style={Object {}}
              >
                <Text
                  style={
                    Object {
                      "color": "#3d3d3d",
                      "fontWeight": "600",
                    }
                  }
                >
                  i18n text
                </Text>
              </View>
              <Text
                style={
                  Object {
                    "color": "#666",
                    "fontSize": 10,
                    "paddingTop": 0,
                  }
                }
              >
                Use placeholderTx and labelTx for i18n lookups
              </Text>
            </View>
            <View
              style={
                Object {
                  "backgroundColor": "#fff",
                  "padding": 10,
                }
              }
            >
              <View
                style={
                  Object {
                    "paddingVertical": 12,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#414042",
                      "fontFamily": "OpenSans-Regular",
                      "fontSize": 13,
                    }
                  }
                >
                  Field
                </Text>
                <TextInput
                  allowFontScaling={true}
                  onChangeText={[Function]}
                  placeholder="Placeholder"
                  rejectResponderTermination={true}
                  style={
                    Object {
                      "backgroundColor": "#ffffff",
                      "color": "#000000",
                      "fontFamily": "OpenSans-Regular",
                      "fontSize": 18,
                      "minHeight": 44,
                    }
                  }
                  underlineColorAndroid="rgba(0, 0, 0, 0)"
                  value=""
                />
              </View>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</View>
`;

exports[`Storyshots TextField Ref Forwarding 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "backgroundColor": "#f0f0f0",
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RCTScrollView
      data={
        Array [
          <UseCase
            text="Ref Forwarding"
            usage=""
          >
            <State
              initial={
                Object {
                  "value": "fancy colour",
                }
              }
            >
              [Function]
            </State>
            <Text
              preset="secondary"
              text="* attention designers:  i am so sorry"
            />
          </UseCase>,
        ]
      }
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={true}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Object {
                "backgroundColor": "#eee",
              }
            }
          >
            <View
              style={
                Object {
                  "borderBottomColor": "#e6e6e6",
                  "borderBottomWidth": 1,
                  "paddingBottom": 10,
                  "paddingHorizontal": 10,
                  "paddingTop": 20,
                }
              }
            >
              <View
                style={
                  Object {
                    "borderTopColor": "#e6e6e6",
                    "borderTopWidth": 1,
                    "flexDirection": "row",
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#666",
                      "fontSize": 10,
                      "paddingBottom": 2,
                      "paddingHorizontal": 4,
                    }
                  }
                >
                  Use Case
                </Text>
              </View>
              <View
                style={Object {}}
              >
                <Text
                  style={
                    Object {
                      "color": "#3d3d3d",
                      "fontWeight": "600",
                    }
                  }
                >
                  Ref Forwarding
                </Text>
              </View>
            </View>
            <View
              style={
                Object {
                  "backgroundColor": "#fff",
                  "padding": 10,
                }
              }
            >
              <View
                style={
                  Object {
                    "paddingVertical": 12,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#414042",
                      "fontFamily": "OpenSans-Regular",
                      "fontSize": 13,
                    }
                  }
                >
                  Name
                </Text>
                <TextInput
                  allowFontScaling={true}
                  onChangeText={[Function]}
                  onFocus={[Function]}
                  rejectResponderTermination={true}
                  style={
                    Object {
                      "backgroundColor": "rebeccapurple",
                      "borderColor": "hotpink",
                      "borderRadius": 4,
                      "borderWidth": 10,
                      "color": "white",
                      "fontFamily": "OpenSans-Regular",
                      "fontSize": 18,
                      "minHeight": 44,
                      "padding": 40,
                    }
                  }
                  underlineColorAndroid="rgba(0, 0, 0, 0)"
                  value="fancy colour"
                />
              </View>
              <Text
                style={
                  Object {
                    "color": "#414042",
                    "fontFamily": "OpenSans-Regular",
                    "fontSize": 9,
                  }
                }
              >
                * attention designers:  i am so sorry
              </Text>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</View>
`;

exports[`Storyshots TextField Style Overrides 1`] = `
<View
  onLayout={[Function]}
  style={
    Object {
      "backgroundColor": "#f0f0f0",
      "flex": 1,
    }
  }
>
  <View
    style={
      Object {
        "flex": 1,
      }
    }
  >
    <RCTScrollView
      data={
        Array [
          Array [
            <UseCase
              noPad={true}
              text="Container Styles"
              usage="Useful for applying margins when laying out a form to remove padding if the form brings its own."
            >
              <State
                initial={
                  Object {
                    "value": "Inigo",
                  }
                }
              >
                [Function]
              </State>
              <State
                initial={
                  Object {
                    "value": "Montoya",
                  }
                }
              >
                [Function]
              </State>
            </UseCase>,
            <UseCase
              text="Input Styles"
              usage="Useful for 1-off exceptions.  Try to steer towards presets for this kind of thing."
            >
              <State
                initial={
                  Object {
                    "value": "fancy colour",
                  }
                }
              >
                [Function]
              </State>
              <Text
                preset="secondary"
                text="* attention designers:  i am so sorry"
              />
            </UseCase>,
            <UseCase
              text="Style array"
              usage="Useful for 1-off exceptions, but using style arrays."
            >
              <State
                initial={
                  Object {
                    "value": "fancy colour",
                  }
                }
              >
                [Function]
              </State>
              <Text
                preset="secondary"
                text="* attention designers:  i am so sorry"
              />
            </UseCase>,
          ],
        ]
      }
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={true}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Object {
                "backgroundColor": "#eee",
              }
            }
          >
            <View
              style={
                Object {
                  "borderBottomColor": "#e6e6e6",
                  "borderBottomWidth": 1,
                  "paddingBottom": 10,
                  "paddingHorizontal": 10,
                  "paddingTop": 20,
                }
              }
            >
              <View
                style={
                  Object {
                    "borderTopColor": "#e6e6e6",
                    "borderTopWidth": 1,
                    "flexDirection": "row",
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#666",
                      "fontSize": 10,
                      "paddingBottom": 2,
                      "paddingHorizontal": 4,
                    }
                  }
                >
                  Use Case
                </Text>
              </View>
              <View
                style={Object {}}
              >
                <Text
                  style={
                    Object {
                      "color": "#3d3d3d",
                      "fontWeight": "600",
                    }
                  }
                >
                  Container Styles
                </Text>
              </View>
              <Text
                style={
                  Object {
                    "color": "#666",
                    "fontSize": 10,
                    "paddingTop": 0,
                  }
                }
              >
                Useful for applying margins when laying out a form to remove padding if the form brings its own.
              </Text>
            </View>
            <View
              style={
                Object {
                  "backgroundColor": "#fff",
                  "padding": 0,
                }
              }
            >
              <View
                style={
                  Object {
                    "paddingHorizontal": 40,
                    "paddingTop": 0,
                    "paddingVertical": 12,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#414042",
                      "fontFamily": "OpenSans-Regular",
                      "fontSize": 13,
                    }
                  }
                >
                  First Name
                </Text>
                <TextInput
                  allowFontScaling={true}
                  onChangeText={[Function]}
                  rejectResponderTermination={true}
                  style={
                    Object {
                      "backgroundColor": "#ffffff",
                      "color": "#000000",
                      "fontFamily": "OpenSans-Regular",
                      "fontSize": 18,
                      "minHeight": 44,
                    }
                  }
                  underlineColorAndroid="rgba(0, 0, 0, 0)"
                  value="Inigo"
                />
              </View>
              <View
                style={
                  Object {
                    "paddingBottom": 0,
                    "paddingVertical": 12,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#414042",
                      "fontFamily": "OpenSans-Regular",
                      "fontSize": 13,
                    }
                  }
                >
                  Last Name
                </Text>
                <TextInput
                  allowFontScaling={true}
                  onChangeText={[Function]}
                  rejectResponderTermination={true}
                  style={
                    Object {
                      "backgroundColor": "#ffffff",
                      "color": "#000000",
                      "fontFamily": "OpenSans-Regular",
                      "fontSize": 18,
                      "minHeight": 44,
                    }
                  }
                  underlineColorAndroid="rgba(0, 0, 0, 0)"
                  value="Montoya"
                />
              </View>
            </View>
          </View>
          <View
            style={
              Object {
                "backgroundColor": "#eee",
              }
            }
          >
            <View
              style={
                Object {
                  "borderBottomColor": "#e6e6e6",
                  "borderBottomWidth": 1,
                  "paddingBottom": 10,
                  "paddingHorizontal": 10,
                  "paddingTop": 20,
                }
              }
            >
              <View
                style={
                  Object {
                    "borderTopColor": "#e6e6e6",
                    "borderTopWidth": 1,
                    "flexDirection": "row",
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#666",
                      "fontSize": 10,
                      "paddingBottom": 2,
                      "paddingHorizontal": 4,
                    }
                  }
                >
                  Use Case
                </Text>
              </View>
              <View
                style={Object {}}
              >
                <Text
                  style={
                    Object {
                      "color": "#3d3d3d",
                      "fontWeight": "600",
                    }
                  }
                >
                  Input Styles
                </Text>
              </View>
              <Text
                style={
                  Object {
                    "color": "#666",
                    "fontSize": 10,
                    "paddingTop": 0,
                  }
                }
              >
                Useful for 1-off exceptions.  Try to steer towards presets for this kind of thing.
              </Text>
            </View>
            <View
              style={
                Object {
                  "backgroundColor": "#fff",
                  "padding": 10,
                }
              }
            >
              <View
                style={
                  Object {
                    "paddingVertical": 12,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#414042",
                      "fontFamily": "OpenSans-Regular",
                      "fontSize": 13,
                    }
                  }
                >
                  Name
                </Text>
                <TextInput
                  allowFontScaling={true}
                  onChangeText={[Function]}
                  rejectResponderTermination={true}
                  style={
                    Object {
                      "backgroundColor": "rebeccapurple",
                      "borderColor": "hotpink",
                      "borderRadius": 4,
                      "borderWidth": 10,
                      "color": "white",
                      "fontFamily": "OpenSans-Regular",
                      "fontSize": 18,
                      "minHeight": 44,
                      "padding": 40,
                    }
                  }
                  underlineColorAndroid="rgba(0, 0, 0, 0)"
                  value="fancy colour"
                />
              </View>
              <Text
                style={
                  Object {
                    "color": "#414042",
                    "fontFamily": "OpenSans-Regular",
                    "fontSize": 9,
                  }
                }
              >
                * attention designers:  i am so sorry
              </Text>
            </View>
          </View>
          <View
            style={
              Object {
                "backgroundColor": "#eee",
              }
            }
          >
            <View
              style={
                Object {
                  "borderBottomColor": "#e6e6e6",
                  "borderBottomWidth": 1,
                  "paddingBottom": 10,
                  "paddingHorizontal": 10,
                  "paddingTop": 20,
                }
              }
            >
              <View
                style={
                  Object {
                    "borderTopColor": "#e6e6e6",
                    "borderTopWidth": 1,
                    "flexDirection": "row",
                    "left": 0,
                    "position": "absolute",
                    "right": 0,
                    "top": 0,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#666",
                      "fontSize": 10,
                      "paddingBottom": 2,
                      "paddingHorizontal": 4,
                    }
                  }
                >
                  Use Case
                </Text>
              </View>
              <View
                style={Object {}}
              >
                <Text
                  style={
                    Object {
                      "color": "#3d3d3d",
                      "fontWeight": "600",
                    }
                  }
                >
                  Style array
                </Text>
              </View>
              <Text
                style={
                  Object {
                    "color": "#666",
                    "fontSize": 10,
                    "paddingTop": 0,
                  }
                }
              >
                Useful for 1-off exceptions, but using style arrays.
              </Text>
            </View>
            <View
              style={
                Object {
                  "backgroundColor": "#fff",
                  "padding": 10,
                }
              }
            >
              <View
                style={
                  Object {
                    "borderWidth": 30,
                    "paddingHorizontal": 30,
                    "paddingVertical": 12,
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "#414042",
                      "fontFamily": "OpenSans-Regular",
                      "fontSize": 13,
                    }
                  }
                >
                  Name
                </Text>
                <TextInput
                  allowFontScaling={true}
                  onChangeText={[Function]}
                  rejectResponderTermination={true}
                  style={
                    Object {
                      "backgroundColor": "rebeccapurple",
                      "borderColor": "#7fff00",
                      "borderRadius": 4,
                      "borderWidth": 10,
                      "color": "white",
                      "fontFamily": "OpenSans-Regular",
                      "fontSize": 18,
                      "minHeight": 44,
                      "padding": 40,
                    }
                  }
                  underlineColorAndroid="rgba(0, 0, 0, 0)"
                  value="fancy colour"
                />
              </View>
              <Text
                style={
                  Object {
                    "color": "#414042",
                    "fontFamily": "OpenSans-Regular",
                    "fontSize": 9,
                  }
                }
              >
                * attention designers:  i am so sorry
              </Text>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</View>
`;
